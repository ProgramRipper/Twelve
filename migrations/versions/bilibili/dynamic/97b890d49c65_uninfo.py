"""uninfo

迁移 ID: 97b890d49c65
父迁移: 9a8b6ae112db
创建时间: 2025-07-14 01:23:53.535951

"""

from __future__ import annotations

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

from migrations.versions.b49551286716_uninfo import (
    SceneModel,
    Session,
    bot_persist_id,
    scene_id,
    scene_type,
)

revision: str = "97b890d49c65"
down_revision: str | Sequence[str] | None = "9a8b6ae112db"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = "b49551286716"


Subscription = sa.table(
    "dynamic_subscription",
    sa.column("uid"),
    sa.column("scene_id"),
    sa.column("session_id"),
)


def upgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("dynamic_subscription", schema=None) as batch_op:
        batch_op.add_column(sa.Column("scene_id", sa.Integer(), nullable=True))
        batch_op.create_foreign_key(
            batch_op.f(
                "fk_dynamic_subscription_scene_id_nonebot_plugin_uninfo_scenemodel"
            ),
            "nonebot_plugin_uninfo_scenemodel",
            ["scene_id"],
            ["id"],
        )

    op.execute(
        sa.update(Subscription).values(
            scene_id=sa.select(SceneModel.c.id)
            .where(Subscription.c.session_id == Session.c.id)
            .filter_by(
                bot_persist_id=bot_persist_id,
                scene_id=scene_id,
                scene_type=scene_type,
            )
            .correlate(Subscription)
            .scalar_subquery()
        )
    )

    with op.batch_alter_table("dynamic_subscription", schema=None) as batch_op:
        batch_op.drop_constraint("pk_dynamic_subscription", type_="primary")
        batch_op.drop_constraint(
            batch_op.f(
                "fk_dynamic_subscription_session_id_nonebot_plugin_session_orm_sessionmodel"
            ),
            type_="foreignkey",
        )
        batch_op.drop_column("session_id")

        batch_op.alter_column("scene_id", existing_type=sa.INTEGER(), nullable=False)
        batch_op.create_primary_key("pk_dynamic_subscription", ["uid", "scene_id"])
    # ### end Alembic commands ###


def downgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("dynamic_subscription", schema=None) as batch_op:
        batch_op.drop_constraint("pk_dynamic_subscription", type_="primary")
        batch_op.drop_constraint(
            batch_op.f(
                "fk_dynamic_subscription_scene_id_nonebot_plugin_uninfo_scenemodel"
            ),
            type_="foreignkey",
        )
        batch_op.drop_column("scene_id")

        batch_op.add_column(sa.Column("session_id", sa.Integer(), nullable=False))
        batch_op.create_foreign_key(
            batch_op.f(
                "fk_dynamic_subscription_session_id_nonebot_plugin_session_orm_sessionmodel"
            ),
            "nonebot_plugin_session_orm_sessionmodel",
            ["session_id"],
            ["id"],
        )
        batch_op.create_primary_key("pk_dynamic_subscription", ["uid", "session_id"])
    # ### end Alembic commands ###
